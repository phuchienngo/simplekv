load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_binary")
load("@rules_java//java:defs.bzl", "java_library")

java_library(
    name = "data_structure_java_lib",
    srcs = glob(["datastructure/SwissMap.java"]),
    visibility = ["//visibility:public"],
    deps = [
        "@maven//:org_jetbrains_annotations",
    ],
)

kt_jvm_binary(
    name = "main_app",
    srcs = [
        "MainApp.kt",
        "config/Config.kt",
        "core/Body.kt",
        "core/CommandOpCodes.kt",
        "core/ErrorCode.kt",
        "core/Event.kt",
        "core/Header.kt",
        "handler/AppendPrependHandler.kt",
        "handler/BaseHandler.kt",
        "handler/DeleteHandler.kt",
        "handler/GetHandler.kt",
        "handler/Handler.kt",
        "handler/IncrementDecrementHandler.kt",
        "handler/MainHandler.kt",
        "handler/MutateHandler.kt",
        "handler/NotNullKeyHandler.kt",
        "handler/NullKeyHandler.kt",
        "server/AcceptorThread.kt",
        "server/Container.kt",
        "server/Message.kt",
        "server/SelectorThread.kt",
        "server/Server.kt",
        "server/Worker.kt",
        "utils/ByteBufferPoolFactory.kt",
        "utils/Commands.kt",
        "utils/Responses.kt",
        "utils/Validators.kt",
    ],
    jvm_flags = [
        "-Xms1G",
        "-Xmx4G",
        "-XX:+UseZGC",
        "-XX:+ZGenerational",
        "-XX:InitiatingHeapOccupancyPercent=70",
        "-XX:SoftMaxHeapSize=1536m",
    ],
    main_class = "app.MainApp",
    deps = [
        "//app:data_structure_java_lib",
        "@maven//:com_google_guava_guava",
        "@maven//:com_lmax_disruptor",
        "@maven//:commons_cli_commons_cli",
        "@maven//:org_apache_commons_commons_pool2",
        "@maven//:org_jetbrains_kotlin_kotlin_stdlib",
        "@maven//:org_slf4j_slf4j_api",
        "@maven//:org_slf4j_slf4j_simple",
    ],
)
